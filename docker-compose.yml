version: '3'

services:
  backend:
    build: backend
    depends_on:
      - db
      - redis
    volumes:
      - ./:/code:ro
      - ./model:/model:ro
    environment:
      - DATABASE_URL=postgresql://postgres:bread@db:5432/bread
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - NVIDIA_VISIBLE_DEVICES=all
    ports:
      - "8000:8000"
    container_name: backend


  frontend:
    build: frontend
    ports:
      - 8501:8501
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - ./model:/model:ro
    restart: always
    container_name: frontend
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - NVIDIA_VISIBLE_DEVICES=all


  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=bread
      - POSTGRES_DB=bread

  worker1:
    build: backend
    command: celery -A autolabel.worker.celery worker --loglevel=info --hostname=worker1@%h -Q queue1
    volumes:
      - ./backend:/usr/src/app
      - ./model:/model:ro
#      - /root/.cache:/root/.cache:ro
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - NVIDIA_VISIBLE_DEVICES=all
    depends_on:
      - backend
      - redis



  redis:
    image: redis:7

  dashboard:
    build: backend
    command: celery --broker=redis://redis:6379/0 flower --port=5555
    ports:
      - 5556:5555
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - backend
      - redis
      - worker1

volumes:
  postgres_data: