# Python In-built packages

# External packages
import streamlit as st

# Local Modules
import pages.utils.helper as helper
from ultralytics import YOLO

from pages.utils.password import check_password

if not check_password():
    st.stop()  # Do not continue if check_password is not True.


# Setting page layout
st.set_page_config(
    page_title="–î–µ—Ç–µ–∫—Ü–∏—è —Ö–ª–µ–±–æ–±—É–ª–æ—á–Ω—ã—Ö –∏–∑–¥–µ–ª–∏–π –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏",
    page_icon="ü§ñ",
    layout="wide",
    initial_sidebar_state="expanded"
)

# Main page heading
st.title("–î–µ—Ç–µ–∫—Ü–∏—è —Ö–ª–µ–±–æ–±—É–ª–æ—á–Ω—ã—Ö –∏–∑–¥–µ–ª–∏–π –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏")

st.text("–î–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–¥—Å—á—ë—Ç–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–æ–∑–¥–∞–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–¥—Å—á—ë—Ç.")

import requests
import streamlit as st


# Fetch the list of counting requests
response = requests.get('http://bread-backend:8543/count/')
if response.status_code == 200:
    counting_requests = response.json()
else:
    st.error('–ù–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–æ—Å–æ–≤. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–µ—Ä—É.')
try:
    response = requests.get('http://bread-backend:8543/bread/')
    breads = response.json()['breads']
    mapping = dict()
    for product in breads:
        mapping[product['name']] = product['id']
except Exception as e:
    mapping = None
    st.error("–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤. –ó–∞–ø–∏—Å–∏ –º–æ–≥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")

# Create a list of pairs (camera, product)
pairs = [request['camera_name'] for request in counting_requests]

# Let the user select a pair
selected_pair = st.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–º–µ—Ä—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–¥—Å—á—ë—Ç–∞.', pairs)

# Find the selected counting request
selected_request = next((request for request in counting_requests if request['camera_name'] == selected_pair[0]), None)

if selected_request is not None:
    # Get the RTSP and product name from the selected counting request
    rtsp = selected_request['rtsp_stream']
    selection_area = selected_request['selection_area']
    counting_line = selected_request['counting_line']
    model = YOLO('/model/yolo.pt')

    helper.play_rtsp_stream(model, rtsp, counting_line, selection_area, mapping)

else:
    st.error('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤—ã–±—Ä–∞–Ω–Ω—É—é –ø–∞—Ä—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ.')
